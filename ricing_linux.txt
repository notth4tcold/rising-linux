RICING LINUX:

SWAY (TILING WINDOW MANAGER)
    sudo pacman -S sway
        Isso instala:
            sway → o compositor/gerenciador de janelas
            swaybg → define plano de fundo
            swaylock → bloqueia a sessão
            swayidle → gerencia suspensão automática
            swaymsg → envia comandos para o Sway
    config global:
        /etc/sway/config
    config de usuario:
        ~/.config/sway/config
    copiar config para usuario:
        mkdir -p ~/.config/sway
        cp /etc/sway/config ~/.config/sway/config
    recarregar config:
        swaymsg reload
    mod pode ser alterado para Mod1 para usar Alt

WOFI(LAUNCHER DE APPS)
    sudo pacman -S wofi
    config:
        ~/.config/wofi/config
        ~/.config/wofi/style.css
    executar:
        wofi --show drun

LY(SYSTEM LOGIN)
    yay -S ly
    binario:
        /usr/bin/ly
    config:
        /etc/ly/config.ini
    ativar no boot:
        sudo systemctl enable ly.service
        sudo systemctl start ly.service
    desativar outros se tiver:
        sudo systemctl disable gdm.service

GRUB (GERENCIADOR DE BOOTLOADER)
    sudo pacman -S grub
    sudo pacman -S efibootmgr # se usar UEFI
    sudo pacman -S os-prober  # se for dual boot windows
    binario:
        /usr/bin/grub-install
        /usr/bin/grub-mkconfig
    config:
        /etc/default/grub        # Configurações principais
        /boot/grub/              # Arquivos do menu e módulos
    instalar:
        sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB
    gerar arquivo de configuracao:
        sudo grub-mkconfig -o /boot/grub/grub.cfg
    detectar windows:
        sudo nano /etc/default/grub
        GRUB_DISABLE_OS_PROBER=false
        sudo os-prober
        e dps gerar config
    configurar windows manualmente (outro hd):
        sudo nano /etc/default/grub
        GRUB_DISABLE_OS_PROBER=false
        lsblk -f # Descobrir onde está o EFI do Windows
            Montar temporariamente a partição EFI do Windows:
                sudo mkdir -p /mnt/windows-efi
                sudo mount /dev/nvme0n1p1 /mnt/windows-efi
            Confirme que existe:
                ls /mnt/windows-efi/EFI/Microsoft/Boot/bootmgfw.efi # Se aparecer o arquivo bootmgfw.efi, é a partição correta.
        sudo nano /etc/grub.d/40_custom
            menuentry "Windows 11" {
                insmod part_gpt
                insmod fat
                set root='hd0,gpt1'
                chainloader /EFI/Microsoft/Boot/bootmgfw.efi
            }
        e dps gerar config

NETWORDK MANAGER -- APPLET (CONFIGURACOES DE REDE)
    sudo pacman -S networkmanager
    sudo pacman -S network-manager-applet # interface gráfica (opcional)
    conectar na rede:
        sudo systemctl enable --now NetworkManager
        nmcli dev wifi list                # Lista redes
        nmcli dev wifi connect NOMEDAREDE password "SENHA"
    ativar e iniciar servico:
        sudo systemctl enable NetworkManager
        sudo systemctl start NetworkManager
        se precisar desabilite o systemd-networkd:
            sudo systemctl disable --now systemd-networkd.service
            sudo systemctl disable --now systemd-networkd-wait-online.service
            sudo systemctl disable --now systemd-network-generator.service
            sudo systemctl mask systemd-networkd.service
            sudo systemctl mask systemd-networkd-wait-online.service
            sudo systemctl mask systemd-network-generator.service

PIPEWIRE (AUDIO E MULTIMIDIA)
    sudo pacman -S pipewire pipewire-alsa pipewire-pulse pipewire-jack pipewire-media-session
        pipewire → núcleo do servidor
        pipewire-pulse → faz aplicativos que usam PulseAudio funcionarem com PipeWire
        pipewire-alsa → compatibilidade com ALSA
        pipewire-jack → compatibilidade com JACK (para áudio profissional)
        pipewire-media-session → gerencia streams de áudio (sessão padrão)
    sudo pacman -S pavucontrol # GUI para controlar volume
    binarios:
        /usr/bin/pipewire
        /usr/bin/pipewire-media-session
    servicos:
        pipewire.service
        pipewire-pulse.service
        pipewire-media-session.service
    config:
        /etc/pipewire/        # configs globais
        ~/.config/pipewire/   # configs do usuário
    ativar e iniciar:
        systemctl --user enable pipewire pipewire-pulse pipewire-media-session
        systemctl --user start pipewire pipewire-pulse pipewire-media-session

KITTY (TERMINAL)
    sudo pacman -S kitty
    executavel:
        /usr/bin/kitty
    config:
        ~/.config/kitty/kitty.conf

NEMO (GERENCIADOR DE ARQUIVOS)
    sudo pacman -S nemo
    sudo pacman -S nemo-fileroller gvfs gvfs-smb
        nemo-fileroller → suporte a arquivos compactados (zip, tar, etc.)
        gvfs → acesso a dispositivos e rede
        gvfs-smb → acesso a compartilhamentos Windows/SMB
    sudo pacman -S ntfs-3g # Para montar o windows
    binario:
        /usr/bin/nemo
    config:
        ~/.config/nemo/
    montar autimaticamento a particao do windows:
        sudo nano /etc/fstab
        /dev/nvme0n1p3 /mnt/windows ntfs-3g defaults,uid=1000,gid=1000 0 0
    Ver depois, tema GTK:
        Nautilus(GTK4)
        Nemo(GTK3)

GTK (THEME biblioteca gráfica)
    yay themix-full-git
    sudo pacman -S dconf-editor dconf
    opne themix
    create theme export to ~/.theme
    dconf-editor
        buscar por gtk-theme
        trocar cada item para o nome tema
    bookmarks:
        file:///mnt/windows windows


WAYBAR (BARRA DE STATUS)
    sudo pacman -S waybar
    binario:
        /usr/bin/waybar
    configs globais:
        /etc/xdg/waybar/
    configs de usuario:
        ~/.config/waybar/
            config
            style.css

EWW (widgets desktop personalizados)
    yay -S eww-git
    binario:
        /usr/bin/eww
    configs:
        ~/.config/eww/


-- CONFIGURACOES MAIS GERAIS DO SISTEMA:


    CONFIGURAR WIFI
        sudo systemctl enable --now iwd
        iwctl
        device list              # vê o nome do adaptador Wi-Fi
        station wlan0 scan       # troca wlan0 pelo nome real do seu adaptador
        station wlan0 get-networks
        station wlan0 connect NOMEDAREDE
        exit

    CONFIGURAR TIMEZONE
        timedatectl
        sudo timedatectl set-timezone America/Sao_Paulo

    CONFIGURAR LANGUAGE
        locale
        sudo nano /etc/locale.conf
        LANG=en_US.UTF-8
        sudo nano /etc/locale.gen
        en_US.UTF-8 UTF-8
        sudo locale-gen
        export LANG=en_US.UTF-8

    CONFIGURAR DRIVER NVIDIA (POR ENQUANTO USANDO O NOUVEAU, PROBLEMAS COM DRIVER PROPRIETARIO E WAYLAND NATIVO :c)
        sudo pacman -S nvidia nvidia-utils nvidia-settings nvidia-dkms
            nvidia → driver do kernel
            nvidia-utils → bibliotecas necessárias
            nvidia-settings → GUI para configurar a GPU
            nvidia-dkms → suporte em Wayland
        configuracao para wayland:
            sudo nano /etc/modprobe.d/nvidia.conf
                options nvidia-drm modeset=1
            sudo mkinitcpio -P
            reboot
        validar:
            lsmod | grep nvidia # Verificar se o módulo está carregado
            nvidia-smi # Verificar se a GPU é detectada